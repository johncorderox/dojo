constructor -> The way in which you establish the initial state of the component.

props -> The data which is passed to the child component FROM the parent component.


Component Life Cycle.

componentDidMount() _ triggered after the component mounted.

Events - onClick, onSubmit, onChange


React Life Cycle --
Initialize
State/Prop update
Destroy

A react component is a function or class which optionally accepts input and returns  a react element .


When would you use class component vs functional?

if it has state or lifecycle methods, use CLASS else FUNCTIONAL

USE this.props with CLASSES.

What are react Keys?

Keys keep track of what items have changed, added, etc.
return <li key={uid}>{task}</li>



------------------------ LIFE CYCLE

GetDefaultProps - called only once
GetInitialState - called only once
ComponentWillMount - this is called before the render method is called. setting the state in this phase WILL NOT TRIGGER RE RENDOR
Render - returns needed markup
componentDidMount - after render is executed. any dom interactions should happen here.


ComponentWillUnount - good for clearing timers. also when an element gets removed.



- Creating a functional component

const person = () => {

return <p>hi</p>
}

export default person;



High Order Components ~~~~~

reusing component logic. takes in a component and returns a new one. share common functionality between
components without repeating code. when it returns a compo it could return additional data.
